{

	// Place your snippets for TypeScript React here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
  },
  "Container component": {
    "prefix": "conc",
    "body": [
      "import * as React from 'react';",
      "import { connect } from 'react-redux';",
      "import * as Store from '../../store/$TM_FILENAME_BASE';",
      "import { ApplicationState } from '../../models/ApplicationState';",
      "import { $TM_FILENAME_BASE$View } from '../presentational/$TM_FILENAME_BASE$View';",
      "",
      "type Props = Store.$1 & typeof Store.actionCreators;",
      "",
      "class $TM_FILENAME_BASE extends React.Component<Props, {}> {",
      "  public render() {",
      "    return($2);",
      "  }",
      "}",
      "",
      "const mapStateToProps = (state: ApplicationState, ownProps: Store.$1) => {",
      "  return {$3};",
      "};",
      "",
      "export default connect(",
      "  mapStateToProps,",
      "  Store.actionCreators",
      ")($TM_FILENAME_BASE);"
    ],
    "description": "Definition suitable for most container components"
  },
  "Presentational component": {
    "prefix": "prec",
    "body": [
      "import * as React from 'react';",
      "",
      "export const $1$View = (props$2) => {",
      "  return ($3",
      "",
      "  );",
      "};"
    ],
    "description": "Small snippet for presentational components"
  },
  "Named import": {
    "prefix": "nimp",
    "body": "import { $2 } from '$1';",
    "description": "Named import"
  },
  "Default import": {
    "prefix": "dimp",
    "body": "import $2 from '$1';",
    "description": "Named import"
  }
}
